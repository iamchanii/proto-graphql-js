### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Message {
  """Required."""
  body: String!

  """Required."""
  status: MessageStatus

  """Required."""
  userId: String!
}

input MessageInput {
  """Required."""
  body: String!

  """Required."""
  status: MessageStatus

  """Required."""
  userId: String
}

enum MessageStatus {
  DRAFT
  PUBLISHED
}

type NoPartialInputMessage {
  """Required."""
  body: String!

  """Required."""
  id: String!
}

input NoPartialInputMessageInput {
  """Required."""
  body: String!

  """Required."""
  id: String!
}

type ParentMessage {
  """Required."""
  noPartialInputMessage: NoPartialInputMessage!

  """Required."""
  partialableInputMessage: PartialableInputMessage!
}

input ParentMessageInput {
  """Required."""
  noPartialInputMessage: NoPartialInputMessageInput!

  """Required."""
  partialableInputMessage: PartialableInputMessageInput!
}

type PartialableInputMessage {
  """Required."""
  body: String!

  """Required."""
  id: String!
}

input PartialableInputMessageInput {
  """Required."""
  body: String!

  """Required."""
  id: String!
}

type Query {
  testInterface: TestPrefixPrefixedMessage!
  testSkipResolver: TestPrefixPrefixedMessage!
  testSquashedUnion: TestPrefixPrefixedMessage!
}

type TestPrefixIgnoredMessageNotIgnored {
  body: String!
}

input TestPrefixIgnoredMessageNotIgnoredInput {
  body: String!
}

interface TestPrefixInterfaceMessage {
  id: String!
}

input TestPrefixInterfaceMessageInput {
  id: String!
}

enum TestPrefixInterfaceMessageType {
  INNER
  INNER2
}

type TestPrefixMessageOnlyOutput {
  body: String!
}

enum TestPrefixPrefixedEnum {
  PREFIXED_BAR
  PREFIXED_FOO
}

type TestPrefixPrefixedMessage {
  body: String!

  """Output only."""
  id: String!
  interfaceMessage: TestPrefixInterfaceMessage!
  notIgnoredMessage: TestPrefixIgnoredMessageNotIgnored
  partialIgnoreOneof: TestPrefixPrefixedMessagePartialIgnoreOneof
  prefixedEnum: TestPrefixPrefixedEnum
  renamedMessage: TestPrefixRenamedMessage
  skipResolver: String!
  squashedMessage: TestPrefixPrefixedMessageSquashedMessage
  squashedMessages: [TestPrefixPrefixedMessageSquashedMessage!]
  thisFieldWasRenamed: String!
}

type TestPrefixPrefixedMessageInnerMessage implements TestPrefixInterfaceMessage {
  body: String!
  id: String!
  skipResolver: String!
}

type TestPrefixPrefixedMessageInnerMessage2 implements TestPrefixInterfaceMessage {
  body: String!
  id: String!
}

input TestPrefixPrefixedMessageInnerMessage2Input {
  body: String!
  id: String!
}

input TestPrefixPrefixedMessageInnerMessageInput {
  body: String!
  id: String!
}

input TestPrefixPrefixedMessageInput {
  body: String!
  notIgnoredMessage: TestPrefixIgnoredMessageNotIgnoredInput
  oneofNotIgnoredField: TestPrefixPrefixedMessageInnerMessageInput
  prefixedEnum: TestPrefixPrefixedEnum
  renamedMessage: TestPrefixRenamedMessageInput
  skipResolver: String!
  squashedMessage: TestPrefixPrefixedMessageSquashedMessageInput
  squashedMessages: [TestPrefixPrefixedMessageSquashedMessageInput!]
  thisFieldWasRenamed: String!
}

union TestPrefixPrefixedMessagePartialIgnoreOneof = TestPrefixPrefixedMessageInnerMessage

union TestPrefixPrefixedMessageSquashedMessage = TestPrefixPrefixedMessageInnerMessage | TestPrefixPrefixedMessageInnerMessage2

input TestPrefixPrefixedMessageSquashedMessageInput {
  oneofField: TestPrefixPrefixedMessageInnerMessageInput
  oneofField2: TestPrefixPrefixedMessageInnerMessage2Input
}

type TestPrefixRenamedMessage {
  body: String!
}

input TestPrefixRenamedMessageInput {
  body: String!
}
